version: '3'

dotenv: ['.env']


tasks:
  setup:
    cmds:
      - docker-compose build --no-cache && docker-compose up -d
  gen-schema:
    cmds:
      - cd ./app && go run ./cmd/gqlgen_generate/main.go
  m-up:
    cmds:
      - migrate --path db/migrations --database postgres://$PSQL_USER:$PSQL_PASS@localhost:5432/$PSQL_DBNAME?sslmode=disable -verbose up
  m-down:
    cmds:
      - migrate --path db/migrations --database postgres://$PSQL_USER:$PSQL_PASS@localhost:5432/$PSQL_DBNAME?sslmode=disable -verbose down
  m-force:
    comds:
      - migrate --path db/migrations --database postgres://$PSQL_USER:$PSQL_PASS@localhost:5432/$PSQL_DBNAME?sslmode=disable force 1
  m-drop:
    comds:
      - migrate --path db/migrations --database postgres://$PSQL_USER:$PSQL_PASS@localhost:5432/$PSQL_DBNAME?sslmode=disable drop
  create-db-schema:
    cmds:
      - docker run -v "$PWD/db/schema:/output" --net="host" schemaspy/schemaspy:latest -t pgsql \\ -host localhost:5432 -db $PSQL_DBNAME -u $PSQL_USER -p $PSQL_PASS -connprops useSSL\\\\=false -all
  open-schema:
    cmds:
      - open -a "Google Chrome" $PWD/db/schema/index.html
  dummydata-insert:
    cmds:
      - cd ./app && go run ./cmd/dummy_data_generate/main.go
  seeding:
    cmds:
      - cd ./app && go run ./cmd/seeder_data_generate/main.go

  generate-orm:
    cmds:
      - docker compose exec app sh -c "sqlboiler psql --add-global-variants"
  init-db:
    cmds:
      - task: m-force
      - task: m-drop
      - task: m-up
      - task: generate-orm
      
