version: '3.8'

services:
  app:
    container_name: ${APP_CONTAINER_NAME}
    build: 
      context: .
      dockerfile: ./docker/golang/Dockerfile
    volumes: 
      - ./app:/go/src/app
    tty: true 
    depends_on:
      - db
    ports:
      - 8888:8888
    networks:
      - athena-network
  db:
    container_name: ${PSQL_HOST}
    build:
      context: .
      dockerfile: ./docker/postgres/Dockerfile
    environment:
      - POSTGRES_DB=${PSQL_DBNAME}
      - POSTGRES_USER=${PSQL_USER}
      - POSTGRES_PASSWORD=${PSQL_PASS}
    volumes:
      - db-store:/var/lib/postgresql/data
    ports:
      - ${PSQL_PORT}:5432
    networks:
      - athena-network
  function:
    build:
      context: .
      dockerfile: ./docker/function/Dockerfile
    volumes:
      - ./function:/workspace
    environment:
      - PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION=python
    ports:
      - 8080:8080
    tty: true
    command: functions-framework --target=main --signature-type=event --debug
  pubsub:
    build:
      context: .
      dockerfile: ./docker/pubsub/Dockerfile
    volumes:
      # - ./scripts:/python-pubsub/samples/snippets/scripts
      - ./pubsub:/python-pubsub/samples/snippets/pubsub
    ports:
      - 8085:8085
    env_file: .env
    tty: true
    # command: ./scripts/entrypoint.sh
volumes:
  db-store:
networks:
  athena-network:
    external: true