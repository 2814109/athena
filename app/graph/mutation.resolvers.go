package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.31

import (
	"context"
	"log"
	"my_gql_server/graph/model"
	"my_gql_server/graph/validation"
)

// CreateTodo is the resolver for the createTodo field.
func (r *mutationResolver) CreateTodo(ctx context.Context, input model.NewTodo) (*model.Todo, error) {
	log.Print("before validation handler")

	if err := validation.Handler(input); err != nil {
		return nil, err
	}
	log.Print("throw validation handler")

	return &model.Todo{
		ID:   "TODO-3",
		Text: input.Text,
		User: &model.User{
			ID:   input.UserID,
			Name: "name",
		},
	}, nil
}

// CreateUser is the resolver for the createUser field.
func (r *mutationResolver) CreateUser(ctx context.Context, input model.NewUser) (*model.User, error) {
	return &model.User{
		ID:   "XXXX",
		Name: input.Name,
	}, nil
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

type mutationResolver struct{ *Resolver }
