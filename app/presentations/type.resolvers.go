package presentations

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.31

import (
	"context"
	"fmt"
	"my_gql_server/graph"
	"my_gql_server/models"
	"reflect"
	"time"
)

// Amount is the resolver for the amount field.
func (r *creditResolver) Amount(ctx context.Context, obj *models.Credit) (*float64, error) {
	panic(fmt.Errorf("not implemented: Amount - amount"))
}

// Amount is the resolver for the amount field.
func (r *debitResolver) Amount(ctx context.Context, obj *models.Debit) (*float64, error) {
	panic(fmt.Errorf("not implemented: Amount - amount"))
}

// Debits is the resolver for the debits field.
func (r *entryResolver) Debits(ctx context.Context, obj *models.Entry) ([]*models.Debit, error) {
	panic(fmt.Errorf("not implemented: Debits - debits"))
}

// Credits is the resolver for the credits field.
func (r *entryResolver) Credits(ctx context.Context, obj *models.Entry) ([]*models.Credit, error) {
	panic(fmt.Errorf("not implemented: Credits - credits"))
}

// User is the resolver for the user field.
func (r *itemResolver) User(ctx context.Context, obj *models.Item) (*models.User, error) {
	panic(fmt.Errorf("not implemented: User - user"))
}

// CreateAt is the resolver for the createAt field.
func (r *paymentResolver) CreateAt(ctx context.Context, obj *models.Payment) (*time.Time, error) {
	panic(fmt.Errorf("not implemented: CreateAt - createAt"))
}

// UpdateAt is the resolver for the updateAt field.
func (r *paymentResolver) UpdateAt(ctx context.Context, obj *models.Payment) (*time.Time, error) {
	panic(fmt.Errorf("not implemented: UpdateAt - updateAt"))
}

// User is the resolver for the user field.
func (r *todoResolver) User(ctx context.Context, obj *models.Todo) (*models.User, error) {
	return obj.R.User, nil
}

// Label is the resolver for the label field.
func (r *paymentTypeResolver) Label(ctx context.Context, obj reflect.Type) (string, error) {
	panic(fmt.Errorf("not implemented: Label - label"))
}

// Credit returns graph.CreditResolver implementation.
func (r *Resolver) Credit() graph.CreditResolver { return &creditResolver{r} }

// Debit returns graph.DebitResolver implementation.
func (r *Resolver) Debit() graph.DebitResolver { return &debitResolver{r} }

// Entry returns graph.EntryResolver implementation.
func (r *Resolver) Entry() graph.EntryResolver { return &entryResolver{r} }

// Item returns graph.ItemResolver implementation.
func (r *Resolver) Item() graph.ItemResolver { return &itemResolver{r} }

// Payment returns graph.PaymentResolver implementation.
func (r *Resolver) Payment() graph.PaymentResolver { return &paymentResolver{r} }

// Todo returns graph.TodoResolver implementation.
func (r *Resolver) Todo() graph.TodoResolver { return &todoResolver{r} }

// PaymentType returns graph.PaymentTypeResolver implementation.
func (r *Resolver) PaymentType() graph.PaymentTypeResolver { return &paymentTypeResolver{r} }

type creditResolver struct{ *Resolver }
type debitResolver struct{ *Resolver }
type entryResolver struct{ *Resolver }
type itemResolver struct{ *Resolver }
type paymentResolver struct{ *Resolver }
type todoResolver struct{ *Resolver }
type paymentTypeResolver struct{ *Resolver }

// !!! WARNING !!!
// The code below was going to be deleted when updating resolvers. It has been copied here so you have
// one last chance to move it out of harms way if you want. There are two reasons this happens:
//   - When renaming or deleting a resolver the old code will be put in here. You can safely delete
//     it when you're done.
//   - You have helper methods in this file. Move them out to keep these resolver files clean.
func (r *entryResolver) Date(ctx context.Context, obj *models.Entry) (string, error) {
	panic(fmt.Errorf("not implemented: Date - date"))
}
func (r *itemResolver) CreatedAt(ctx context.Context, obj *models.Item) (string, error) {
	panic(fmt.Errorf("not implemented: CreatedAt - createdAt"))
}
func (r *itemResolver) UpdatedAt(ctx context.Context, obj *models.Item) (string, error) {
	panic(fmt.Errorf("not implemented: UpdatedAt - updatedAt"))
}
func (r *paymentResolver) PaymentAt(ctx context.Context, obj *models.Payment) (string, error) {
	panic(fmt.Errorf("not implemented: PaymentAt - paymentAt"))
}
